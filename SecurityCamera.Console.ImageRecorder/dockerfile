# Use the official image as a parent image.
ARG SDKARCH=amd64
FROM mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim-$SDKARCH AS build-env


ARG TARGETARCH
RUN arch=$TARGETARCH \
    && if [ "$TARGETARCH" = "amd64" ]; then arch="x64"; fi \
    && echo $arch > /tmp/arch

# Set the working directory.
WORKDIR /src

# Copy the rest of the working directory contents.
COPY ../ ./

# Build the app.
WORKDIR /src/SecurityCamera.Console.ImageRecorder
RUN dotnet publish -c Release -r linux-$(cat /tmp/arch) --self-contained false -o /build

# Build runtime image.
FROM mcr.microsoft.com/dotnet/aspnet:8.0-bookworm-slim as runtime

RUN apt update 
RUN apt install ffmpeg nano htop imagemagick -y

WORKDIR /app
COPY --from=build-env /build .

WORKDIR /scripts
COPY ../SecurityCamera.Console.ImageRecorder/DockerAssets/Run.sh Run.sh
RUN chmod +x Run.sh
COPY ../SecurityCamera.Console.ImageRecorder/DockerAssets/record.sh record.sh
RUN chmod +x record.sh
COPY ../SecurityCamera.Console.ImageRecorder/DockerAssets/push.sh push.sh
RUN chmod +x push.sh
COPY ../SecurityCamera.Console.ImageRecorder/DockerAssets/imageResize.sh imageResize.sh
RUN chmod +x imageResize.sh

WORKDIR /images
# Set the command to run when the container starts.
ENTRYPOINT ["/scripts/Run.sh" ]
